# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

#pool:
 # vmImage: ubuntu-latest

steps:
- task: TerraformTaskV2@2
  inputs:
    provider: 'azurerm'
    command: 'init'
    workingDirectory: 'https://github.com/pnarsipur1/azurelearning/blob/main/Infrastructrure/terraform/'
    backendServiceArm: 'Pay-As-You-Go(acf8be16-4029-4672-bd15-7c4aa64a5a8a)'
    backendAzureRmResourceGroupName: 'pradeepnp'
    backendAzureRmStorageAccountName: 'pradeepstorageacctname'
    backendAzureRmContainerName: 'tstate'
    backendAzureRmKey: 'tts.tfstate'
- task: TerraformTaskV2@2
  inputs:
    provider: 'azurerm'
    command: 'validate'
    workingDirectory: 'https://github.com/pnarsipur1/azurelearning/blob/main/Infrastructrure/terraform/'
- task: TerraformTaskV2@2
  inputs:
        provider: 'azurerm'
        command: 'plan'
        workingDirectory: 'https://github.com/pnarsipur1/azurelearning/blob/main/Infrastructrure/terraform/'
        environmentServiceNameAzureRM: 'Pay-As-You-Go(acf8be16-4029-4672-bd15-7c4aa64a5a8a)'
- task: TerraformTaskV2@2
  inputs:
    provider: 'azurerm'
    command: 'apply'
    workingDirectory: 'https://github.com/pnarsipur1/azurelearning/blob/main/Infrastructrure/terraform/'
    environmentServiceNameAzureRM: 'Pay-As-You-Go(acf8be16-4029-4672-bd15-7c4aa64a5a8a)'

